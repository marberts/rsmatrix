[{"path":"https:// marberts.github.io/rsmatrix/LICENSE.html","id":"mit-license","dir":"","previous_headings":"","what":"MIT License","title":"NA","text":"Copyright (c) 2020 Steve Martin Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https:// marberts.github.io/rsmatrix/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steve Martin. Author, maintainer, copyright holder.","code":""},{"path":"https:// marberts.github.io/rsmatrix/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martin S (2023). rsmatrix: Matrices Repeat-Sales Price Indexes. https://marberts.github.io/rsmatrix, https://github.com/marberts/rsmatrix.","code":"@Manual{,   title = {rsmatrix: Matrices for Repeat-Sales Price Indexes},   author = {Steve Martin},   year = {2023},   note = {https://marberts.github.io/rsmatrix, https://github.com/marberts/rsmatrix}, }"},{"path":"https:// marberts.github.io/rsmatrix/index.html","id":"matrices-for-repeat-sales-price-indexes","dir":"","previous_headings":"","what":"Matrices for Repeat-Sales Price Indexes","title":"Matrices for Repeat-Sales Price Indexes","text":"small package calculating matrices Shiller (1991) serve foundation many repeat-sales price indexes. Builds ‘rsi’ package Kirby-McGregor Martin (2019).","code":""},{"path":"https:// marberts.github.io/rsmatrix/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Matrices for Repeat-Sales Price Indexes","text":"Get development version GitHub.","code":"install.package(\"rsmatrix\") devtools::install_github(\"marberts/rsmatrix\")"},{"path":"https:// marberts.github.io/rsmatrix/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Matrices for Repeat-Sales Price Indexes","text":"","code":"library(rsmatrix)  # Make some data sales <- data.frame(id =    c(1, 1, 1, 2, 2),                      date =  c(1, 2, 3, 1, 3),                      price = c(1, 3, 2, 1, 1))  # Turn into sales pairs sales[c(\"date_prev\", \"price_prev\")] <- sales[rs_pairs(sales$date, sales$id), c(\"date\", \"price\")]  (sales <- subset(sales, date > date_prev)) ##   id date price date_prev price_prev ## 2  1    2     3         1          1 ## 3  1    3     2         2          3 ## 5  2    3     1         1          1 # Calculate matrices matrix_constructor <- with(sales, rs_matrix(date, date_prev, price, price_prev)) matrices <- sapply(c(\"Z\", \"X\", \"y\", \"Y\"), matrix_constructor)  matrices$Z ##    2 3 ## 1  1 0 ## 2 -1 1 ## 3  0 1 matrices$X ##    2 3 ## 1  3 0 ## 2 -3 2 ## 3  0 1 # Calculate the GRS index in Bailey, Muth, and Nourse (1963) b <- with(matrices, solve(crossprod(Z), crossprod(Z, y))[, 1]) (grs <- exp(b) * 100) ##        2        3  ## 238.1102 125.9921 # Calculate the ARS index in Shiller (1991) b <- with(matrices, solve(crossprod(Z, X), crossprod(Z, Y))[, 1]) (ars <- 100 / b) ##        2        3  ## 240.0000 133.3333"},{"path":"https:// marberts.github.io/rsmatrix/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Matrices for Repeat-Sales Price Indexes","text":"Kirby-McGregor, M., Martin, S. (2019). R package calculating repeat-sale price indices. Romanian Statistical Review, 3:17-33. Shiller, R. J. (1991). Arithmetic repeat sales price estimators. Journal Housing Economics, 1(1):110-126.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiller's repeat-sales matrices — rs_matrix","title":"Shiller's repeat-sales matrices — rs_matrix","text":"Create function compute \\(Z\\), \\(X\\), \\(y\\), \\(Y\\) matrices Shiller (1991, sections -II) sales-pair data order calculate repeat-sales price index.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiller's repeat-sales matrices — rs_matrix","text":"","code":"rs_matrix(t2, t1, p2, p1, f = NULL, sparse = FALSE)"},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiller's repeat-sales matrices — rs_matrix","text":"t2, t1 pair vectors giving time period second first sale, respectively. Usually vector dates, values possible can coerced character vectors sorted chronological order (.e., order()). p2, p1 pair numeric vectors giving price second first sale, respectively. f optional factor length t1 t2, vector turned factor, used group sales. sparse sparse matrices Matrix package used (faster large datasets), regular dense matrices (default)?","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiller's repeat-sales matrices — rs_matrix","text":"function returned rs_matrix() computes generalization matrices Shiller (1991, sections -II) applicable grouped data. useful calculating separate indexes many, say, cities without needing explicit loop. \\(Z\\), \\(X\\), \\(Y\\) matrices well defined either t1 t2 missing values, error thrown case. Similarly, always case t2 > t1, otherwise warning given.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiller's repeat-sales matrices — rs_matrix","text":"function takes single argument naming desired matrix. returns one two matrices (\\(Z\\) \\(X\\)) two vectors (\\(y\\) \\(Y\\)), either regular matrices sparse = FALSE, sparse matrices class dgCMatrix sparse = TRUE.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shiller's repeat-sales matrices — rs_matrix","text":"Bailey, M. J., Muth, R. F., Nourse, H. O. (1963). regression method real estate price index construction. Journal American Statistical Association , 53(304):933-942. Shiller, R. J. (1991). Arithmetic repeat sales price estimators. Journal Housing Economics, 1(1):110-126.","code":""},{"path":[]},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiller's repeat-sales matrices — rs_matrix","text":"","code":"# Make some data x <- data.frame(date = c(3, 2, 3, 2, 3, 3),                  date_prev = c(1, 1, 2, 1, 2, 1),                  price = 6:1,                  price_prev = 1)  # Calculate matrices mat <- with(x, rs_matrix(date, date_prev, price, price_prev)) Z <- mat(\"Z\") # Z matrix X <- mat(\"X\") # X matrix y <- mat(\"y\") # y vector Y <- mat(\"Y\") # Y vector  # Calculate the GRS index in Bailey, Muth, and Nourse (1963) b <- solve(crossprod(Z), crossprod(Z, y))[, 1] # or b <- qr.coef(qr(Z), y) (grs <- exp(b) * 100) #>        2        3  #> 235.0755 403.5654   # Standard errors vcov <- rs_var(y - Z %*% b, Z) sqrt(diag(vcov)) * grs # delta method #>        2        3  #> 111.0797 257.6581   # Calculate the ARS index in Shiller (1991) b <- solve(crossprod(Z, X), crossprod(Z, Y))[, 1] # or b <- qr.coef(qr(crossprod(Z, X)), crossprod(Z, Y)) (ars <- 100 / b) #>        2        3  #> 310.5263 491.6667   # Standard errors vcov <- rs_var(Y - X %*% b, Z, X) sqrt(diag(vcov)) * ars^2 / 100 # delta method #>        2        3  #> 100.0316 232.3111   # Works with grouped data x <- data.frame(date = c(3, 2, 3, 2),                  date_prev = c(2, 1, 2, 1),                  price = 4:1,                  price_prev = 1,                 group = c(\"a\", \"a\", \"b\", \"b\"))                  mat <- with(x, rs_matrix(date, date_prev, price, price_prev, group)) b <- solve(crossprod(mat(\"Z\"), mat(\"X\")), crossprod(mat(\"Z\"), mat(\"Y\")))[, 1] 100 / b #>  a.2  b.2  a.3  b.3  #>  300  100 1200  200"},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Sales pairs — rs_pairs","title":"Sales pairs — rs_pairs","text":"Turn repeat-sales data sales pairs suitable making repeat-sales matrices.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sales pairs — rs_pairs","text":"","code":"rs_pairs(period, product)"},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sales pairs — rs_pairs","text":"period vector gives time period sale. Usually date vector, factor levels chronological order, values possible can sorted chronological order (.e., order()). product vector gives product identifier sale. Usually factor vector integer codes product.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sales pairs — rs_pairs","text":"numeric vector indices giving position previous sale product, convention previous sale first sale . first position returned case ties.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_pairs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sales pairs — rs_pairs","text":"order()) workhorse rs_pairs(), performance can sensitive types period product, can slow large character vectors.","code":""},{"path":[]},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_pairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sales pairs — rs_pairs","text":"","code":"# Make sales pairs x <- data.frame(id = c(1, 1, 1, 3, 2, 2, 3, 3),                  date = c(1, 2, 3, 2, 1, 3, 4, 1),                  price = c(1, 3, 2, 3, 1, 1, 1, 2))                  pairs <- rs_pairs(x$date, x$id)  x[c(\"date_prev\", \"price_prev\")] <- x[c(\"date\", \"price\")][pairs, ]  x #>   id date price date_prev price_prev #> 1  1    1     1         1          1 #> 2  1    2     3         1          1 #> 3  1    3     2         2          3 #> 4  3    2     3         1          2 #> 5  2    1     1         1          1 #> 6  2    3     1         1          1 #> 7  3    4     1         2          3 #> 8  3    1     2         1          2"},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust variance matrix for repeat-sales indexes — rs_var","title":"Robust variance matrix for repeat-sales indexes — rs_var","text":"Convenience function compute cluster-robust variance matrix linear regression, without instruments, clustering occurs along one dimension. Useful calculating variance matrix regression calculated manually.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust variance matrix for repeat-sales indexes — rs_var","text":"","code":"rs_var(u, Z, X = Z, ids = seq_len(nrow(X)), df = NULL)"},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust variance matrix for repeat-sales indexes — rs_var","text":"u \\(n \\times 1\\) vector residuals linear regression. Z \\(n \\times k\\) matrix instruments. X  \\(n \\times k\\) matrix covariates. ids factor length \\(n\\), something can coerced one, groups observations u. default observation belongs group. df optional degrees freedom correction. Default Stata's small sample degrees freedom correction.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robust variance matrix for repeat-sales indexes — rs_var","text":"function calculates standard robust variance matrix linear regression, Manski (1988, section 8.1.2) White (2001, Theorem 6.3); , \\((Z'X)^{-1} V (X'Z)^{-1}\\). useful regression calculated hand. generalizes variance matrix proposed Shiller (1991, section II) property sells twice. function gives result vcovHC(x, type = 'sss', cluster = 'group') plm package.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust variance matrix for repeat-sales indexes — rs_var","text":"\\(k \\times k\\) covariance matrix.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_var.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robust variance matrix for repeat-sales indexes — rs_var","text":"Manski, C. (1988). Analog Estimation Methods Econometrics. Chapman Hall. Shiller, R. J. (1991). Arithmetic repeat sales price estimators. Journal Housing Economics, 1(1):110-126. White, H. (2001). Asymptotic Theory Econometricians (revised edition). Emerald Publishing.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rs_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robust variance matrix for repeat-sales indexes — rs_var","text":"","code":"# Makes some groups in mtcars mtcars$clust<- letters[1:4]  # Matrices for regression x <- model.matrix(~ cyl + disp, mtcars) y <- matrix(mtcars$mpg)  # Regression coefficients b <- solve(crossprod(x), crossprod(x, y))  # Residuals r <- y - x %*% b  # Robust variance matrix vcov <- rs_var(r, x, ids = mtcars$clust)  if (FALSE) { # Same as plm library(plm) mdl <- plm(mpg ~ cyl + disp, mtcars, model = 'pooling', index = 'clust') vcov2 <- vcovHC(mdl, type = 'sss', cluster = 'group') vcov - vcov2 }"},{"path":"https:// marberts.github.io/rsmatrix/reference/rsmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrices for Repeat-Sales Price Indexes — rsmatrix-package","title":"Matrices for Repeat-Sales Price Indexes — rsmatrix-package","text":"small package calculating matrices Shiller (1991) serve foundation many repeat-sales price indexes.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rsmatrix.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrices for Repeat-Sales Price Indexes — rsmatrix-package","text":"repeat-sales price indexes used practice require matrices Shiller (1991, sections -II), e.g., S&P's Case-Shiller index, Teranet-National Bank's HPI, formerly Statistics Canada's RPPI. rs_matrix() function produces function easily construct matrices. cases data need structured sales pairs, can done rs_pairs() function.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rsmatrix.html","id":"contribution","dir":"Reference","previous_headings":"","what":"Contribution","title":"Matrices for Repeat-Sales Price Indexes — rsmatrix-package","text":"McSpatial package (formerly CRAN) functionality making repeat-sales indices. functions package build rsi package Kirby-McGregor Martin (2019), also gives good background theory repeat-sales indexes.","code":""},{"path":"https:// marberts.github.io/rsmatrix/reference/rsmatrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Matrices for Repeat-Sales Price Indexes — rsmatrix-package","text":"ILO, IMF, OECD, UN, World Bank, Eurostat. (2013). Handbook Residential Property Prices Indices (RPPIs). Eurostat. Kirby-McGregor, M., Martin, S. (2019). R package calculating repeat-sale price indices. Romanian Statistical Review, 3:17-33. Shiller, R. J. (1991). Arithmetic repeat sales price estimators. Journal Housing Economics, 1(1):110-126.","code":""},{"path":[]},{"path":"https:// marberts.github.io/rsmatrix/reference/rsmatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Matrices for Repeat-Sales Price Indexes — rsmatrix-package","text":"Maintainer: Steve Martin stevemartin041@gmail.com","code":""},{"path":"https:// marberts.github.io/rsmatrix/news/index.html","id":"changes-in-version-026","dir":"Changelog","previous_headings":"","what":"Changes in version 0.2.6","title":"Changes in version 0.2.6","text":"CRAN release: 2023-06-01 Updated work Matrix >= 1.5-0.","code":""},{"path":"https:// marberts.github.io/rsmatrix/news/index.html","id":"changes-in-version-023","dir":"Changelog","previous_headings":"","what":"Changes in version 0.2.3","title":"Changes in version 0.2.3","text":"CRAN release: 2022-03-15 Making “Y” vector rs_matrix() longer gives error length-0 inputs factor non-empty levels. rs_matrix() cleans enclosing environment result.","code":""},{"path":"https:// marberts.github.io/rsmatrix/news/index.html","id":"changes-in-version-021","dir":"Changelog","previous_headings":"","what":"Changes in version 0.2.1","title":"Changes in version 0.2.1","text":"CRAN release: 2022-02-13 rs_pairs() rs_matrix() now faster, less picky inputs time periods.","code":""},{"path":"https:// marberts.github.io/rsmatrix/news/index.html","id":"changes-in-version-020","dir":"Changelog","previous_headings":"","what":"Changes in version 0.2.0","title":"Changes in version 0.2.0","text":"CRAN release: 2021-10-08 rs_pairs() reworked much faster general, rs_unpair() removed. changes backwards compatible. Added French translations. Fixed NOTE LazyData CRAN.","code":""}]
